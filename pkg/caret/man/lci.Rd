% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lci.R
\name{lci}
\alias{lci}
\title{L Confidence Interval}
\usage{
lci(trainResult, confLevel = trainResult$control$confLevel, ...,
  confGamma = if (is.null(newdata)) trainResult$control$confGamma else
  "skewness", newdata = NULL, newoutcome = NULL, number = 100L)
}
\arguments{
\item{trainResult}{An object returned by \code{\link{train}}.}

\item{confLevel}{The desired confidence level between 0 and 1.}

\item{...}{Further arguments for \code{\link[stats]{predict}} when \code{newdata} is provided.}

\item{confGamma}{The normalization exponent. To estimate, use "range", "quantile" or "skewness",
otherwise provide the numeric value. See details.}

\item{newdata}{New data to use to calculate the interval.}

\item{newoutcome}{The outcomes corresponding to \code{newdata}.}

\item{number}{Number of subsamples for the calculation of the interval. Only relevant if 
\code{newdata} is provided.}
}
\description{
Calculate a confidence interval based on subsampling.
}
\details{
The confidence interval, denoted here as LCI, is based on Politis and Romano (1994).

It requires almost no additional overhead for the calculations, but it is not entirely 
nonparametric. The normalization exponent \code{confGamma} should be set according to the 
expected sampling distribution of the statistic (in this case \code{metric}). A value of 0.5 
would assume normality. It can be estimated during training using the "range" or "quantile"
methods discussed in Bertail, Politis and Romano (1999), which requires more memory since it must
create a matrix with 20 columns and (number of replications * number of tunning parameter
combinations) rows.

Specifying "skewness" tries to decide which estimation method to use based on the skewness of the
resampling distribution (requires \pkg{e1071} package).

If the resulting confidence interval is \code{NULL}, it means no cross-validation was done, or it
is unsupported (e.g \code{oob}). If it has infinite values, it could be due to:

\itemize{
  \item Not enough replications were performed. Try increasing \code{number} or \code{repeats}
    appropriately in \code{\link{trainControl}}.
  \item The confidence level (\code{confLevel}) is too high. Could be solved with the above, or
    by decreasing the confidence level.
  \item The chosen metric is not very smooth. Look at its histogram using the \code{resample} 
  element of \code{\link{train}}'s output.
  (\code{hist(trainObject$resample[[trainObject$metric]])})
}

If a custom \code{summaryFunction} is provided, please make sure its output has at least one
numeric element with the same name as the \code{metric} specified in \code{\link{train}},
otherwise it might not be detected correctly.
}
\note{
The resampling results of training need to be available for this calculations to be feasible.
This interval has asymptotic convergence, so the more replications, the better.

The value given to \code{\link{train}} in \code{trControl$confLevel} is the one that is used for
the calculation during training. This can be changed when calling this function.
}
\author{
Alexis Sarda
}
\references{
Dimitris N. Politis and Joseph P. Romano. ``Large sample confidence regions based on subsamples
under minimal assumptions''. The Annals of Statistics, pages 2031-2050, 1994.

Bertail, Patrice, Dimitris N. Politis, and Joseph P. Romano. ``On subsampling estimators with
unknown rate of convergence''. Journal of the American Statistical Association 94.446 (1999):
569-579.
}

